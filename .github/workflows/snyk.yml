name: Python SCA scan

on:
  workflow_call:
    secrets:
      SNYK_TOKEN:
        required: true
      DEFECTDOJO_API_TOKEN:
        required: true
      DEFECTDOJO_URL:
        required: true

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Create directory for Trivy results
        run: mkdir -p snyk/results

      - name: Run Snyk SCA scan on requirements.txt
        run: snyk test --json-file-output=snyk/results/snyk.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Upload Snyk JSON report artifact
        uses: actions/upload-artifact@v4
        with:
          name: snyk-results
          path: snyk/results/

      - name: Download snyk results artifact
        uses: actions/download-artifact@v4
        with:
          name: snyk-results

      - name: Import scan results into DefectDojo
        env:
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          DEFECTDOJO_API_TOKEN: ${{ secrets.DEFECTDOJO_API_TOKEN }}
          DEFECTDOJO_PRODUCT: 1
          DEFECTDOJO_ENGAGEMENT: 4
          DEFECTDOJO_SCAN_TYPE: "Snyk Scan"
          DEFECTDOJO_ENVIRONMENT: "Production"
          SCAN_DATE: ${{ env.SCAN_DATE }}
        run: |
          echo "Uploading snyk/results/snyk.json to DefectDojo..."
          curl -k -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
            -H "Authorization: Token $DEFECTDOJO_API_TOKEN" \
            -F "file=@snyk/results/snyk.json" \
            -F "scan_type=$DEFECTDOJO_SCAN_TYPE" \
            -F "product=$DEFECTDOJO_PRODUCT" \
            -F "engagement=$DEFECTDOJO_ENGAGEMENT" \
            -F "environment=$DEFECTDOJO_ENVIRONMENT" \
            -F "scan_date=$SCAN_DATE" \
            -F "close_old_findings=true"
